[{"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\index.tsx":"1","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\reportWebVitals.ts":"2","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\App.tsx":"3","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\Inventory.tsx":"4","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\actions\\inventory-actions.tsx":"5","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\inventory.tsx":"6","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\inventory-item.tsx":"7","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\inventory-context.tsx":"8","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\inventory-search-bar.tsx":"9","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\hooks\\useGetInventory.tsx":"10","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\common\\header.tsx":"11","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\redux\\configureStore.tsx":"12","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\redux\\reducers\\index.tsx":"13","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\redux\\reducers\\inventory-reducers.tsx":"14","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\redux\\actions\\inventory-actions.tsx":"15","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\redux\\actions\\actionTypes.tsx":"16","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\api\\inventory-api.tsx":"17","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\reducers\\inventory-reducers.tsx":"18","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\inventory-utils.tsx":"19","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\inventory\\inventory.tsx":"20","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\inventory-data\\inventory-data.tsx":"21","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\inventory\\inventory-search-bar.tsx":"22","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\inventory\\inventory-item.tsx":"23","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\inventory\\inventory-utils.tsx":"24"},{"size":771,"mtime":1614657578364,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":751,"mtime":1612234002883,"results":"28","hashOfConfig":"26"},{"size":4078,"mtime":1609610388504,"results":"29","hashOfConfig":"26"},{"size":127,"mtime":1609551779111,"results":"30","hashOfConfig":"26"},{"size":6183,"mtime":1614311233605,"results":"31","hashOfConfig":"26"},{"size":453,"mtime":1614214235779,"results":"32","hashOfConfig":"26"},{"size":816,"mtime":1612234922296,"results":"33","hashOfConfig":"26"},{"size":299,"mtime":1609603852359,"results":"34","hashOfConfig":"26"},{"size":1641,"mtime":1612843096796,"results":"35","hashOfConfig":"26"},{"size":1422,"mtime":1614658536158,"results":"36","hashOfConfig":"26"},{"size":420,"mtime":1612228280518,"results":"37","hashOfConfig":"26"},{"size":193,"mtime":1614833577056,"results":"38","hashOfConfig":"26"},{"size":1417,"mtime":1614834785213,"results":"39","hashOfConfig":"26"},{"size":3354,"mtime":1614834930944,"results":"40","hashOfConfig":"26"},{"size":497,"mtime":1614833220629,"results":"41","hashOfConfig":"26"},{"size":1430,"mtime":1614814178332,"results":"42","hashOfConfig":"26"},{"size":819,"mtime":1612224300737,"results":"43","hashOfConfig":"26"},{"size":677,"mtime":1614311618817,"results":"44","hashOfConfig":"26"},{"size":5720,"mtime":1614835211205,"results":"45","hashOfConfig":"26"},{"size":3107,"mtime":1614834916702,"results":"46","hashOfConfig":"26"},{"size":299,"mtime":1609603852359,"results":"47","hashOfConfig":"26"},{"size":453,"mtime":1614214235779,"results":"48","hashOfConfig":"26"},{"size":677,"mtime":1614311618817,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"118gyh3",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\index.tsx",[],["109","110"],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\reportWebVitals.ts",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\App.tsx",["111"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport Header from './components/common/header';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ReactNotification />\r\n      <Header />\r\n      {/* <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\Inventory.tsx",["112","113","114"],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\actions\\inventory-actions.tsx",["115"],"import React from \"react\"\r\n\r\nexport const GET_ALL_SUCCESS = 'GET_ALL_SUCCESS';\r\nexport const UPDATE_STATUS = 'UPDATE_STATUS';\r\n",["116","117"],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\inventory.tsx",["118","119","120","121","122","123","124","125","126","127","128"],"import React, { useState, useEffect, useReducer, Reducer, useContext } from \"react\";\r\nimport { Select, FormControl, InputLabel, Container, Button, Input, CircularProgress, Card, CardHeader, CardMedia, CardContent, Typography, CardActions, IconButton, Grid, Paper } from \"@material-ui/core\";\r\nimport InventoryItem from \"./inventory-item\";\r\nimport InventorySearchBar from \"./inventory-search-bar\";\r\nimport { InventoryProvider, InventoryContext } from \"./inventory-context\";\r\nimport { InventoryImage } from \"../../models/inventory-models\";\r\nimport { connect } from 'react-redux';\r\nimport * as inventoryActions from '../../redux/actions/inventory-actions';\r\nimport * as actionTypes from '../../redux/actions/actionTypes';\r\nimport { inventoryReducer } from \"../../redux/reducers/inventory-reducers\";\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types'\r\nimport { inventoryImages } from \"./inventory-utils\";\r\nimport styled from 'styled-components';\r\n\r\nfunction Inventory(props) {\r\n    const { loadInventory, addInventory } = props;\r\n    useEffect(() => {\r\n        loadInventory();\r\n    }, []); //This array is an array of items to watch, and it it changes it will rerender again.\r\n    //Otherwise, with the empty array as a second argument to effect means the effect will run only once when the component mounts.\r\n    const err: any = {};\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [inventoryToAdd, setInventoryToAdd] = useState('');\r\n    const [errors, setErrors] = useState(err);\r\n\r\n\r\n    //dispatch is a good generic term for managing state on multiple state objects\r\n    // const [{ inventory, status, error }, dispatch] = useReducer(inventoryReducer, {\r\n    //     status: actionTypes.REQUEST_STATUS.LOADING,\r\n    //     inventory: [],\r\n    //     error: null\r\n    // });\r\n\r\n    //Remember, React components automatically re-render whenver there is a change in their sttae or props.\r\n    const isLoading = props.state.status === actionTypes.REQUEST_STATUS.LOADING;\r\n    const isSuccess = props.state.status === actionTypes.REQUEST_STATUS.SUCCESS;\r\n    const isError = props.state.status === actionTypes.REQUEST_STATUS.ERROR;\r\n\r\n    function handleAdd(event) {\r\n        event.preventDefault();\r\n        if (!formIsValid()) return;\r\n        addInventory(inventoryToAdd);\r\n    }\r\n\r\n    function formIsValid(): boolean {\r\n        const errors: any = {};\r\n\r\n        if (!inventoryToAdd) {\r\n            errors.name = \"Name is required.\";\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Site</InputLabel>\r\n                <Select\r\n                    native\r\n                    label=\"Site\"\r\n                >\r\n                    <option aria-label=\"None\" value=\"\" />\r\n                    <option value={10}>Ansley Mall</option>\r\n                    <option value={20}>Brookhaven</option>\r\n                    <option value={30}>GA Tech Campus</option>\r\n                </Select>\r\n            </FormControl>\r\n            <InventorySearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n            {isLoading && <CircularProgress />}\r\n\r\n            {\r\n                isSuccess &&\r\n                <InventoryComponent searchQuery={searchQuery} inventory={props.state.inventory}></InventoryComponent>\r\n            }\r\n            <Input type='text' placeholder='Type inventory to add' value={inventoryToAdd}\r\n                onChange={(e) => setInventoryToAdd(e.target.value)} />\r\n            {errors && <span>{errors.name}</span>}\r\n            <Button onClick={handleAdd}>Add Inventory</Button>\r\n            {isError && <p>Error occured! {props.state.error}</p>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst InventoryComponent = (props: any) => {\r\n    const inventoryNames = props.inventory.map((i: any) => i.Name);\r\n    return (\r\n        <Grid container direction=\"row\">\r\n            {inventoryImages.filter((image: InventoryImage) => {\r\n                return (image.name.includes(props.searchQuery) && inventoryNames.includes(image.name))\r\n            }).map((inventoryImage: InventoryImage, i) =>\r\n                <Grid item xs={4}>\r\n                    <ItemCard key={i} inventoryImage={inventoryImage}></ItemCard>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst ItemCard = (props) => {\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                    </IconButton>\r\n                }\r\n                title={props.inventoryImage.name}\r\n                subheader=\"September 14, 2016\"\r\n            />\r\n            <InventoryItem key={props.key} inventoryImage={props.inventoryImage} />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    This impressive paella is a perfect party dish and a fun meal to cook together with your\r\n                    guests. Add 1 cup of frozen peas along with the mussels, if you like.\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nInventory.propTypes = {\r\n    loadInventory: PropTypes.func.isRequired\r\n}\r\n\r\n// Determines what state is passed to our component via props\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        state: state.inventoryReducer\r\n    }\r\n}\r\n\r\n// What actions we want to expose on our component\r\nconst mapDispatchToProps = {\r\n    loadInventory: inventoryActions.loadInventory,\r\n    addInventory: inventoryActions.addInventory\r\n}\r\n\r\n//when we omit mapDispatchToProps, our component gets a dispatch prop injected automatically\r\n// the \"connect\" api also connects our component to the store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Inventory);\r\n",["129","130"],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\inventory-item.tsx",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\inventory-context.tsx",["131","132","133","134","135"],"import React, { useEffect, useReducer } from \"react\";\r\nimport { GET_ALL_SUCCESS, UPDATE_STATUS } from \"../../actions/inventory-actions\";\r\nimport useGetInventory from \"../../hooks/useGetInventory\";\r\nimport { InventoryImage } from \"../../models/inventory-models\";\r\nimport { inventoryReducer, REQUEST_STATUS } from \"../../reducers/inventory-reducers\";\r\nimport InventoryItem from \"./inventory-item\";\r\n\r\nconst InventoryContext = React.createContext<any>([]);\r\n\r\nconst InventoryProvider = ({ children }: any) => {\r\n\r\n    const state = useGetInventory();\r\n\r\n    return (\r\n        <InventoryContext.Provider value={state}>\r\n            {children}\r\n        </InventoryContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport { InventoryContext, InventoryProvider }",["136","137"],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\inventory-search-bar.tsx",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\hooks\\useGetInventory.tsx",["138","139","140","141"],"import React from \"react\";\r\nimport { useEffect, useReducer, useState } from \"react\";\r\nimport * as actionTypes from \"../redux/actions/actionTypes\";\r\nimport * as inventoryActions from '../redux/actions/inventory-actions'\r\nimport { InventoryImage } from \"../models/inventory-models\";\r\nimport { inventoryReducer } from '../redux/reducers/inventory-reducers';\r\n\r\nfunction useGetInventory() {\r\n    const inventoryImages: InventoryImage[] = [\r\n        {\r\n            imageSrc: 'images/apple.jpg',\r\n            name: 'apple'\r\n        },\r\n        {\r\n            imageSrc: 'images/carrot.jpg',\r\n            name: 'carrots'\r\n        },\r\n        {\r\n            imageSrc: 'images/kale.jpg',\r\n            name: 'kale'\r\n        },\r\n    ];\r\n\r\n    const axios = require('axios');\r\n    const signal = React.useRef(axios.CancelToken.source()); // use React.useRef to guarantee we still have reference to this cancellation token is not disposed of during the liftime of the component\r\n\r\n    // dispatch is a good generic term for managing state on multiple state objects\r\n    const [{ inventory, status, error }, dispatch] = useReducer(inventoryReducer, {\r\n        status: actionTypes.REQUEST_STATUS.LOADING,\r\n        inventory: [],\r\n        error: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        //inventoryActions.loadInventory();\r\n        return () => {\r\n            console.log('unmount and cancel any running axios request');\r\n            signal.current.cancel();\r\n        };\r\n    }, [])\r\n\r\n    const state = {\r\n        inventoryImages,\r\n        inventory,\r\n        status,\r\n        error\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default useGetInventory;\r\n","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\common\\header.tsx",["142","143"],"import React from 'react';\r\nimport { AppBar, Tabs, Tab, Box } from \"@material-ui/core\";\r\nimport Inventory from '../inventory/inventory';\r\nimport InventoryData from '../inventory-data/inventory-data';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: number;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Box p={10}>\r\n            {value === index && children}\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nfunction Header() {\r\n    const activeStyle = { color: '#F15B2A' };\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar>\r\n                <Tabs value={value} onChange={handleChange}>\r\n                    <Tab label=\"Inventory\" />\r\n                    <Tab label=\"Vitamin\" />\r\n                    <Tab label=\"Personal\" />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <InventoryData />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Inventory />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                Item Three\r\n            </TabPanel>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\redux\\configureStore.tsx",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\redux\\reducers\\index.tsx",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\redux\\reducers\\inventory-reducers.tsx",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\redux\\actions\\inventory-actions.tsx",["144"],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\redux\\actions\\actionTypes.tsx",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\api\\inventory-api.tsx",["145","146"],"import SelectInput from \"@material-ui/core/Select/SelectInput\";\r\nimport { SSL_OP_EPHEMERAL_RSA } from \"constants\";\r\n\r\nexport async function getInventoryAsync(): Promise<any> {\r\n    const axios = require('axios');\r\n    return await axios({\r\n        url: 'http://localhost:8080/query',\r\n        method: 'post',\r\n        data: {\r\n            query: `\r\n                query getInventory {\r\n                    inventory {\r\n                        Name,\r\n                        Count,\r\n                        Site,\r\n                        InventoryVitamin {\r\n                            VitaminId,\r\n                            PercentDailyValue\r\n                        }\r\n                    }\r\n                }\r\n            `\r\n        }\r\n    })\r\n}\r\n\r\nexport async function createInventoryAsync(name: string): Promise<any> {\r\n    const axios = require('axios');\r\n    return await axios.post('http://localhost:8080/query', {\r\n        query: `\r\n                mutation AddInventory($newInventory: NewInventory!) {\r\n                    createInventory(input: $newInventory) {\r\n                        Id, Name, Count, Site\r\n                    }\r\n                }\r\n            `,\r\n        variables: {\r\n            'newInventory': {\r\n                'Name': name,\r\n                'Count': 100,\r\n                'Site': 'Ansley Mall'\r\n            }\r\n        }\r\n    }).then(result => {\r\n        return result.data.data\r\n    })\r\n}\r\n","C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\reducers\\inventory-reducers.tsx",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\Inventory\\inventory-utils.tsx",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\inventory\\inventory.tsx",["147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\inventory-data\\inventory-data.tsx",["161","162","163","164","165"],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\inventory\\inventory-search-bar.tsx",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\inventory\\inventory-item.tsx",[],"C:\\Development\\go\\src\\my-go-apps\\VitaminUI\\src\\components\\inventory\\inventory-utils.tsx",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":12},{"ruleId":"170","severity":1,"message":"174","line":1,"column":50,"nodeType":"172","messageId":"173","endLine":1,"endColumn":57},{"ruleId":"170","severity":1,"message":"175","line":13,"column":11,"nodeType":"172","messageId":"173","endLine":13,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":67,"column":8,"nodeType":"178","endLine":67,"endColumn":10,"suggestions":"179"},{"ruleId":"170","severity":1,"message":"180","line":1,"column":8,"nodeType":"172","messageId":"173","endLine":1,"endColumn":13},{"ruleId":"166","replacedBy":"181"},{"ruleId":"168","replacedBy":"182"},{"ruleId":"170","severity":1,"message":"183","line":1,"column":38,"nodeType":"172","messageId":"173","endLine":1,"endColumn":48},{"ruleId":"170","severity":1,"message":"174","line":1,"column":50,"nodeType":"172","messageId":"173","endLine":1,"endColumn":57},{"ruleId":"170","severity":1,"message":"184","line":1,"column":59,"nodeType":"172","messageId":"173","endLine":1,"endColumn":69},{"ruleId":"170","severity":1,"message":"185","line":2,"column":105,"nodeType":"172","messageId":"173","endLine":2,"endColumn":114},{"ruleId":"170","severity":1,"message":"186","line":2,"column":172,"nodeType":"172","messageId":"173","endLine":2,"endColumn":177},{"ruleId":"170","severity":1,"message":"187","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":27},{"ruleId":"170","severity":1,"message":"188","line":5,"column":29,"nodeType":"172","messageId":"173","endLine":5,"endColumn":45},{"ruleId":"170","severity":1,"message":"189","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":26},{"ruleId":"170","severity":1,"message":"190","line":11,"column":10,"nodeType":"172","messageId":"173","endLine":11,"endColumn":28},{"ruleId":"170","severity":1,"message":"191","line":14,"column":8,"nodeType":"172","messageId":"173","endLine":14,"endColumn":14},{"ruleId":"176","severity":1,"message":"192","line":20,"column":8,"nodeType":"178","endLine":20,"endColumn":10,"suggestions":"193"},{"ruleId":"166","replacedBy":"194"},{"ruleId":"168","replacedBy":"195"},{"ruleId":"170","severity":1,"message":"196","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":21},{"ruleId":"170","severity":1,"message":"197","line":35,"column":14,"nodeType":"172","messageId":"173","endLine":35,"endColumn":23},{"ruleId":"170","severity":1,"message":"198","line":35,"column":25,"nodeType":"172","messageId":"173","endLine":35,"endColumn":31},{"ruleId":"170","severity":1,"message":"199","line":35,"column":33,"nodeType":"172","messageId":"173","endLine":35,"endColumn":38},{"ruleId":"176","severity":1,"message":"177","line":63,"column":8,"nodeType":"178","endLine":63,"endColumn":10,"suggestions":"200"},{"ruleId":"166","replacedBy":"201"},{"ruleId":"168","replacedBy":"202"},{"ruleId":"170","severity":1,"message":"203","line":2,"column":33,"nodeType":"172","messageId":"173","endLine":2,"endColumn":41},{"ruleId":"170","severity":1,"message":"204","line":4,"column":13,"nodeType":"172","messageId":"173","endLine":4,"endColumn":29},{"ruleId":"170","severity":1,"message":"205","line":28,"column":42,"nodeType":"172","messageId":"173","endLine":28,"endColumn":50},{"ruleId":"176","severity":1,"message":"206","line":38,"column":20,"nodeType":"172","endLine":38,"endColumn":27},{"ruleId":"170","severity":1,"message":"207","line":14,"column":40,"nodeType":"172","messageId":"173","endLine":14,"endColumn":45},{"ruleId":"170","severity":1,"message":"208","line":25,"column":11,"nodeType":"172","messageId":"173","endLine":25,"endColumn":22},{"ruleId":"170","severity":1,"message":"209","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":19},{"ruleId":"170","severity":1,"message":"210","line":1,"column":8,"nodeType":"172","messageId":"173","endLine":1,"endColumn":19},{"ruleId":"170","severity":1,"message":"211","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":30},{"ruleId":"170","severity":1,"message":"183","line":1,"column":38,"nodeType":"172","messageId":"173","endLine":1,"endColumn":48},{"ruleId":"170","severity":1,"message":"174","line":1,"column":50,"nodeType":"172","messageId":"173","endLine":1,"endColumn":57},{"ruleId":"170","severity":1,"message":"184","line":1,"column":59,"nodeType":"172","messageId":"173","endLine":1,"endColumn":69},{"ruleId":"170","severity":1,"message":"212","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":16},{"ruleId":"170","severity":1,"message":"213","line":2,"column":18,"nodeType":"172","messageId":"173","endLine":2,"endColumn":29},{"ruleId":"170","severity":1,"message":"214","line":2,"column":31,"nodeType":"172","messageId":"173","endLine":2,"endColumn":41},{"ruleId":"170","severity":1,"message":"185","line":2,"column":105,"nodeType":"172","messageId":"173","endLine":2,"endColumn":114},{"ruleId":"170","severity":1,"message":"187","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":27},{"ruleId":"170","severity":1,"message":"188","line":5,"column":29,"nodeType":"172","messageId":"173","endLine":5,"endColumn":45},{"ruleId":"170","severity":1,"message":"215","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":24},{"ruleId":"170","severity":1,"message":"190","line":11,"column":10,"nodeType":"172","messageId":"173","endLine":11,"endColumn":28},{"ruleId":"170","severity":1,"message":"191","line":14,"column":8,"nodeType":"172","messageId":"173","endLine":14,"endColumn":14},{"ruleId":"170","severity":1,"message":"216","line":15,"column":10,"nodeType":"172","messageId":"173","endLine":15,"endColumn":24},{"ruleId":"176","severity":1,"message":"192","line":23,"column":8,"nodeType":"178","endLine":23,"endColumn":10,"suggestions":"217"},{"ruleId":"170","severity":1,"message":"203","line":3,"column":41,"nodeType":"172","messageId":"173","endLine":3,"endColumn":49},{"ruleId":"170","severity":1,"message":"218","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":17},{"ruleId":"170","severity":1,"message":"209","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":19},{"ruleId":"176","severity":1,"message":"192","line":17,"column":8,"nodeType":"178","endLine":17,"endColumn":10,"suggestions":"219"},{"ruleId":"170","severity":1,"message":"220","line":38,"column":11,"nodeType":"172","messageId":"173","endLine":38,"endColumn":18},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Reducer' is defined but never used.","'increment' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInventoryAsync'. Either include it or remove the dependency array.","ArrayExpression",["223"],"'React' is defined but never used.",["221"],["222"],"'useReducer' is defined but never used.","'useContext' is defined but never used.","'CardMedia' is defined but never used.","'Paper' is defined but never used.","'InventoryProvider' is defined but never used.","'InventoryContext' is defined but never used.","'inventoryReducer' is defined but never used.","'bindActionCreators' is defined but never used.","'styled' is defined but never used.","React Hook useEffect has a missing dependency: 'loadInventory'. Either include it or remove the dependency array.",["224"],["221"],["222"],"'InventoryItem' is defined but never used.","'inventory' is assigned a value but never used.","'status' is assigned a value but never used.","'error' is assigned a value but never used.",["225"],["221"],["222"],"'useState' is defined but never used.","'inventoryActions' is defined but never used.","'dispatch' is assigned a value but never used.","The ref value 'signal.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'signal.current' to a variable inside the effect, and use that variable in the cleanup function.","'other' is assigned a value but never used.","'activeStyle' is assigned a value but never used.","'Inventory' is defined but never used.","'SelectInput' is defined but never used.","'SSL_OP_EPHEMERAL_RSA' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'inventoryStore' is defined but never used.","'createSelector' is defined but never used.",["226"],"'inventory' is defined but never used.",["227"],"'isError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"228","fix":"232"},{"desc":"230","fix":"233"},{"desc":"230","fix":"234"},"Update the dependencies array to be: [getInventoryAsync]",{"range":"235","text":"236"},"Update the dependencies array to be: [loadInventory]",{"range":"237","text":"238"},{"range":"239","text":"236"},{"range":"240","text":"238"},{"range":"241","text":"238"},[2300,2302],"[getInventoryAsync]",[1111,1113],"[loadInventory]",[2217,2219],[1150,1152],[678,680]]